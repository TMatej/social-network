# FOR LOCAL TESTING

version: "3.9"

services:
  # db-postgres:
  #   container_name: social-network-pgdb
  #   image: postgres:latest
  #   build:
  #     context: ./database
  #     dockerfile: postgresql/Dockerfile
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - 5432:5432

  # server:
  #   container_name: social-network-app-server
  #   image: social-network-server:latest
  #   build:
  #     context: ./SocialNetworkApp
  #     dockerfile: Dockerfile
  #   environment:
  #     ConnectionStrings__postgres: "Host=social-network-pgdb;Username=postgres;Password=postgres;Port=5432;Database=social_network_test_db;"
  #     Properties__SeedData: "true"
  #   ports:
  #     - 5000:5000
  #   depends_on:
  #     - db-postgres

  db-mssql:
    container_name: social-network-mssqldb
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    environment:
      MSSQL_PID: "Developer"
      ACCEPT_EULA: "Y"
      SA_PASSWORD: mySuper!password9
    ports:
      - 1433:1433

  server:
    container_name: social-network-app-server
    image: social-network-server:latest
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      # container_name should be enough, but for some reason specific ip must be supplied for server
      # docker network ls
      # docker network inspect <bridge_tag>
      # find the sql ipv4 address
      ASPNETCORE_HTTPS_PORT: "5001"
      ConnectionStrings__mssql: "Server=172.19.0.2,1433;Database=social_network_test_db;User Id=SA;Password=mySuper!password9;MultipleActiveResultSets=true;TrustServerCertificate=True;"
      Properties__SeedData: true
    ports:
      - 5000:5000
    depends_on:
      - db-mssql
# 172.19.0.2
  client:
    container_name: social-network-app-client
    image: social_network_client:latest
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - 3000:80
    depends_on:
      - server
