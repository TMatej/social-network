# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches: ["main"]

  # for manual running
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    container: mcr.microsoft.com/dotnet/sdk:6.0

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: SocialNetworkApp

      - name: Build
        run: dotnet build --no-restore
        working-directory: SocialNetworkApp

  tests:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: mcr.microsoft.com/dotnet/sdk:6.0

    env:
      ConnectionStrings__DefaultConnection: "Host=postgres;Username=postgres;Password=${{ secrets.POSTGRES_TEST_PASSWORD }};Port=5432;Database=social_network_test_db;"
      Properties__SeedData: false
      
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_TEST_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: SocialNetworkApp

      - name: Build
        run: dotnet build --no-restore
        working-directory: SocialNetworkApp

      - name: Run Unit-tests
        run: dotnet test --no-build --verbosity normal
        working-directory: SocialNetworkApp/DalUnitTests

      - name: Run Infrastructure-tests
        run: dotnet test --no-build --verbosity normal
        working-directory: SocialNetworkApp/Infrastructure.EFCore.Test

      - name: Run Service-tests
        run: dotnet test --no-build --verbosity normal
        working-directory: SocialNetworkApp/ServiceTests

  build-push-docker:
    needs: tests

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: tmatej/social-network
      IMAGE_TAG: latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry - ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build&Push Image
        uses: docker/build-push-action@v3
        with:
          context: SocialNetworkApp
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} # ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
