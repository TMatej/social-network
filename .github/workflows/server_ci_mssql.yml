name: CI - server - mssql

on:
  push:
   branches: ["main"]
   paths:
     - 'server/**'
  pull_request:
   types:
     - opened
     - edited
     - synchronize
     - reopened
   branches: ["main"]
   paths:
     - 'server/**'

  # for manual running
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    container: mcr.microsoft.com/dotnet/sdk:6.0

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: server

      - name: Build
        run: dotnet build --no-restore
        working-directory: server

  tests:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: mcr.microsoft.com/dotnet/sdk:6.0
    
    env:
      MSSQL_HOST: mssql
      MSSQL_PORT: 1433
    
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          ACCEPT_EULA: 'Y'
        ports:
          - 1433:1433

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore
        working-directory: server

      - name: Build
        run: dotnet build --no-restore
        working-directory: server

      - name: Run Unit-tests
        run: dotnet test --no-build --verbosity normal
        working-directory: server/DataAccessLayer.UnitTests

      - name: Run Infrastructure-tests
        run: dotnet test --no-build --verbosity normal
        working-directory: server/Infrastructure.EFCore.Tests

      - name: Run Service-tests
        run: dotnet test --no-build --verbosity normal
        working-directory: server/BusinessLayer.Tests
