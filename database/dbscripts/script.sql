CREATE DATABASE social_network_test_db WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.utf8' LC_CTYPE = 'en_US.utf8';

\connect social_network_test_db

CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "Commentable" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Commentable" PRIMARY KEY ("Id")
);

CREATE TABLE "FileEntities" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Guid" uuid NOT NULL,
    "Name" text NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "UpdatedAt" timestamp with time zone NULL,
    CONSTRAINT "PK_FileEntities" PRIMARY KEY ("Id")
);

CREATE TABLE "GroupRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(64) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_GroupRoles" PRIMARY KEY ("Id")
);

CREATE TABLE "ParticipationTypes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(64) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_ParticipationTypes" PRIMARY KEY ("Id")
);

CREATE TABLE "Postable" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Postable" PRIMARY KEY ("Id")
);

CREATE TABLE "Roles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    CONSTRAINT "PK_Roles" PRIMARY KEY ("Id")
);

CREATE TABLE "Users" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Username" character varying(64) NOT NULL,
    "PasswordHash" character varying(1024) NOT NULL,
    "Email" character varying(255) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "AvatarId" integer NULL,
    "FirstName" text NULL,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Users_FileEntities_AvatarId" FOREIGN KEY ("AvatarId") REFERENCES "FileEntities" ("Id")
);

CREATE TABLE "Group" (
    "Id" integer NOT NULL,
    "Name" character varying(64) NOT NULL,
    "Description" character varying(255) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_Group" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Group_Postable_Id" FOREIGN KEY ("Id") REFERENCES "Postable" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Comment" (
    "Id" integer NOT NULL,
    "CommentableId" integer NOT NULL,
    "UserId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "Content" character varying(512) NOT NULL,
    CONSTRAINT "PK_Comment" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Comment_Commentable_CommentableId" FOREIGN KEY ("CommentableId") REFERENCES "Commentable" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Comment_Commentable_Id" FOREIGN KEY ("Id") REFERENCES "Commentable" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Comment_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Contacts" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "User1Id" integer NOT NULL,
    "User2Id" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_Contacts" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Contacts_Users_User1Id" FOREIGN KEY ("User1Id") REFERENCES "Users" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Contacts_Users_User2Id" FOREIGN KEY ("User2Id") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Conversations" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_Conversations" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Conversations_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Post" (
    "Id" integer NOT NULL,
    "UserId" integer NOT NULL,
    "PostableId" integer NOT NULL,
    "Title" character varying(64) NOT NULL,
    "Content" character varying(256) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_Post" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Post_Commentable_Id" FOREIGN KEY ("Id") REFERENCES "Commentable" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Post_Postable_PostableId" FOREIGN KEY ("PostableId") REFERENCES "Postable" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Post_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Profile" (
    "Id" integer NOT NULL,
    "Name" character varying(64) NULL,
    "Address_State" character varying(64) NULL,
    "Address_Region" character varying(64) NULL,
    "Address_City" character varying(64) NULL,
    "Address_Street" character varying(64) NULL,
    "Address_HouseNumber" character varying(32) NULL,
    "Address_PostalCode" character varying(32) NULL,
    "Sex" integer NULL,
    "PhoneNumber" character varying(20) NULL,
    "DateOfBirth" timestamp with time zone NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_Profile" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Profile_Postable_Id" FOREIGN KEY ("Id") REFERENCES "Postable" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Profile_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "UserRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_UserRoles" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Events" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "GroupId" integer NOT NULL,
    "Title" character varying(64) NOT NULL,
    "Description" character varying(256) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_Events" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Events_Group_GroupId" FOREIGN KEY ("GroupId") REFERENCES "Group" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Events_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "GroupMembers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "GroupId" integer NOT NULL,
    "UserId" integer NOT NULL,
    "GroupRoleId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_GroupMembers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_GroupMembers_GroupRoles_GroupRoleId" FOREIGN KEY ("GroupRoleId") REFERENCES "GroupRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_GroupMembers_Group_GroupId" FOREIGN KEY ("GroupId") REFERENCES "Group" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_GroupMembers_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "ConversationParticipants" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ConversationId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_ConversationParticipants" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ConversationParticipants_Conversations_ConversationId" FOREIGN KEY ("ConversationId") REFERENCES "Conversations" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ConversationParticipants_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);

CREATE TABLE "Messages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ConversationId" integer NOT NULL,
    "AuthorId" integer NOT NULL,
    "Content" text NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "AttachmentId" integer NULL,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Messages_Conversations_ConversationId" FOREIGN KEY ("ConversationId") REFERENCES "Conversations" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Messages_Users_AuthorId" FOREIGN KEY ("AuthorId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);

CREATE TABLE "Galeries" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Title" character varying(64) NULL,
    "Description" character varying(512) NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "ProfileId" integer NOT NULL,
    CONSTRAINT "PK_Galeries" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Galeries_Profile_ProfileId" FOREIGN KEY ("ProfileId") REFERENCES "Profile" ("Id") ON DELETE CASCADE
);

CREATE TABLE "EventParticipants" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "EventId" integer NOT NULL,
    "UserId" integer NOT NULL,
    "ParticipationTypeId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    CONSTRAINT "PK_EventParticipants" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_EventParticipants_Events_EventId" FOREIGN KEY ("EventId") REFERENCES "Events" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_EventParticipants_ParticipationTypes_ParticipationTypeId" FOREIGN KEY ("ParticipationTypeId") REFERENCES "ParticipationTypes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_EventParticipants_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);

CREATE TABLE "Attachments" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "MessageId" integer NOT NULL,
    "Url" text NOT NULL,
    CONSTRAINT "PK_Attachments" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Attachments_Messages_MessageId" FOREIGN KEY ("MessageId") REFERENCES "Messages" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Photo" (
    "Id" integer NOT NULL,
    "Title" character varying(64) NULL,
    "Description" character varying(256) NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT (now()),
    "Url" text NOT NULL,
    "GaleryId" integer NOT NULL,
    CONSTRAINT "PK_Photo" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Photo_Commentable_Id" FOREIGN KEY ("Id") REFERENCES "Commentable" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Photo_Galeries_GaleryId" FOREIGN KEY ("GaleryId") REFERENCES "Galeries" ("Id") ON DELETE CASCADE
);

INSERT INTO "Commentable" ("Id")
VALUES (1);
INSERT INTO "Commentable" ("Id")
VALUES (2);
INSERT INTO "Commentable" ("Id")
VALUES (3);
INSERT INTO "Commentable" ("Id")
VALUES (4);
INSERT INTO "Commentable" ("Id")
VALUES (5);
INSERT INTO "Commentable" ("Id")
VALUES (6);
INSERT INTO "Commentable" ("Id")
VALUES (7);

INSERT INTO "GroupRoles" ("Id", "Name")
VALUES (1, 'Example Role');

INSERT INTO "ParticipationTypes" ("Id", "Name")
VALUES (1, 'Example Type');

INSERT INTO "Postable" ("Id")
VALUES (1);
INSERT INTO "Postable" ("Id")
VALUES (2);
INSERT INTO "Postable" ("Id")
VALUES (3);
INSERT INTO "Postable" ("Id")
VALUES (4);

INSERT INTO "Users" ("Id", "AvatarId", "Email", "FirstName", "PasswordHash", "Username")
VALUES (1, NULL, 'JozoJeSuper@gmail.com', NULL, '0123456789abcde0', 'jozkoVajda123');
INSERT INTO "Users" ("Id", "AvatarId", "Email", "FirstName", "PasswordHash", "Username")
VALUES (2, NULL, 'cokoloko@gmail.com', NULL, '0123456789abcde0', 'lokomotivatomas123');

INSERT INTO "Comment" ("Id", "CommentableId", "Content", "UserId")
VALUES (5, 1, 'Some content here!', 1);
INSERT INTO "Comment" ("Id", "CommentableId", "Content", "UserId")
VALUES (6, 3, 'This photo is awful!', 1);
INSERT INTO "Comment" ("Id", "CommentableId", "Content", "UserId")
VALUES (7, 5, 'This photo is beautifull you little prick!!!', 2);

INSERT INTO "Contacts" ("Id", "User1Id", "User2Id")
VALUES (1, 1, 2);

INSERT INTO "Conversations" ("Id", "UserId")
VALUES (1, 1);
INSERT INTO "Conversations" ("Id", "UserId")
VALUES (2, 1);

INSERT INTO "Group" ("Id", "Description", "Name")
VALUES (3, 'This is an example group', 'Example Group one');
INSERT INTO "Group" ("Id", "Description", "Name")
VALUES (4, 'This is an example group', 'Example Group two');

INSERT INTO "Post" ("Id", "Content", "PostableId", "Title", "UserId")
VALUES (1, 'This is my first post!', 1, 'Hello World!', 1);
INSERT INTO "Post" ("Id", "Content", "PostableId", "Title", "UserId")
VALUES (2, 'This is my second post!', 1, 'Hello World!', 1);

INSERT INTO "Profile" ("Id", "Address_City", "Address_HouseNumber", "Address_PostalCode", "Address_Region", "Address_State", "Address_Street", "DateOfBirth", "Name", "PhoneNumber", "Sex", "UserId")
VALUES (1, 'Example City', 'Example House number', 'Example Postal Code', 'Example Region', 'Example State', 'Example Street', NULL, NULL, NULL, NULL, 1);
INSERT INTO "Profile" ("Id", "Address_City", "Address_HouseNumber", "Address_PostalCode", "Address_Region", "Address_State", "Address_Street", "DateOfBirth", "Name", "PhoneNumber", "Sex", "UserId")
VALUES (2, 'Example City', NULL, NULL, NULL, 'Example State', NULL, NULL, NULL, NULL, NULL, 2);

INSERT INTO "ConversationParticipants" ("Id", "ConversationId", "UserId")
VALUES (1, 1, 1);
INSERT INTO "ConversationParticipants" ("Id", "ConversationId", "UserId")
VALUES (2, 1, 2);

INSERT INTO "Events" ("Id", "Description", "GroupId", "Title", "UserId")
VALUES (1, 'This is an example event for Group 3', 3, 'Example Event', 1);
INSERT INTO "Events" ("Id", "Description", "GroupId", "Title", "UserId")
VALUES (2, 'This is an example event without participants for Group 3', 3, 'Example Userless Event', 1);

INSERT INTO "Galeries" ("Id", "Description", "ProfileId", "Title")
VALUES (1, 'This is an example galery', 1, 'Example Galery');
INSERT INTO "Galeries" ("Id", "Description", "ProfileId", "Title")
VALUES (2, 'This is an example galery without content', 1, 'Example Empty Galery');

INSERT INTO "GroupMembers" ("Id", "GroupId", "GroupRoleId", "UserId")
VALUES (1, 3, 1, 1);

INSERT INTO "Messages" ("Id", "AttachmentId", "AuthorId", "Content", "ConversationId")
VALUES (1, NULL, 1, 'I have two attchments!', 1);
INSERT INTO "Messages" ("Id", "AttachmentId", "AuthorId", "Content", "ConversationId")
VALUES (2, NULL, 2, 'I am just plain text', 1);

INSERT INTO "Attachments" ("Id", "MessageId", "Url")
VALUES (1, 1, 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png');
INSERT INTO "Attachments" ("Id", "MessageId", "Url")
VALUES (2, 2, 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png');

INSERT INTO "EventParticipants" ("Id", "EventId", "ParticipationTypeId", "UserId")
VALUES (1, 1, 1, 1);
INSERT INTO "EventParticipants" ("Id", "EventId", "ParticipationTypeId", "UserId")
VALUES (2, 1, 1, 2);

INSERT INTO "Photo" ("Id", "Description", "GaleryId", "Title", "Url")
VALUES (3, 'This is my first photo', 1, 'My first photo', 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png');
INSERT INTO "Photo" ("Id", "Description", "GaleryId", "Title", "Url")
VALUES (4, 'This is my last photo... No I didn''t die', 1, 'My last photo', 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png');

CREATE UNIQUE INDEX "IX_Attachments_MessageId" ON "Attachments" ("MessageId");

CREATE INDEX "IX_Comment_CommentableId" ON "Comment" ("CommentableId");

CREATE INDEX "IX_Comment_UserId" ON "Comment" ("UserId");

CREATE UNIQUE INDEX "IX_Contacts_User1Id_User2Id" ON "Contacts" ("User1Id", "User2Id");

CREATE UNIQUE INDEX "IX_Contacts_User2Id_User1Id" ON "Contacts" ("User2Id", "User1Id");

CREATE INDEX "IX_ConversationParticipants_ConversationId" ON "ConversationParticipants" ("ConversationId");

CREATE INDEX "IX_ConversationParticipants_UserId" ON "ConversationParticipants" ("UserId");

CREATE INDEX "IX_Conversations_UserId" ON "Conversations" ("UserId");

CREATE INDEX "IX_EventParticipants_EventId" ON "EventParticipants" ("EventId");

CREATE INDEX "IX_EventParticipants_ParticipationTypeId" ON "EventParticipants" ("ParticipationTypeId");

CREATE UNIQUE INDEX "IX_EventParticipants_UserId" ON "EventParticipants" ("UserId");

CREATE INDEX "IX_Events_GroupId" ON "Events" ("GroupId");

CREATE INDEX "IX_Events_UserId" ON "Events" ("UserId");

CREATE UNIQUE INDEX "IX_FileEntities_Guid" ON "FileEntities" ("Guid");

CREATE INDEX "IX_Galeries_ProfileId" ON "Galeries" ("ProfileId");

CREATE INDEX "IX_GroupMembers_GroupId" ON "GroupMembers" ("GroupId");

CREATE INDEX "IX_GroupMembers_GroupRoleId" ON "GroupMembers" ("GroupRoleId");

CREATE INDEX "IX_GroupMembers_UserId" ON "GroupMembers" ("UserId");

CREATE INDEX "IX_Messages_AuthorId" ON "Messages" ("AuthorId");

CREATE INDEX "IX_Messages_ConversationId" ON "Messages" ("ConversationId");

CREATE INDEX "IX_Photo_GaleryId" ON "Photo" ("GaleryId");

CREATE INDEX "IX_Post_PostableId" ON "Post" ("PostableId");

CREATE INDEX "IX_Post_UserId" ON "Post" ("UserId");

CREATE INDEX "IX_Profile_UserId" ON "Profile" ("UserId");

CREATE UNIQUE INDEX "IX_Roles_Name" ON "Roles" ("Name");

CREATE INDEX "IX_UserRoles_RoleId" ON "UserRoles" ("RoleId");

CREATE INDEX "IX_UserRoles_UserId" ON "UserRoles" ("UserId");

CREATE UNIQUE INDEX "IX_Users_AvatarId" ON "Users" ("AvatarId");

CREATE UNIQUE INDEX "IX_Users_Username" ON "Users" ("Username");

SELECT setval(
    pg_get_serial_sequence('"Commentable"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Commentable") + 1,
        nextval(pg_get_serial_sequence('"Commentable"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"GroupRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "GroupRoles") + 1,
        nextval(pg_get_serial_sequence('"GroupRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ParticipationTypes"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ParticipationTypes") + 1,
        nextval(pg_get_serial_sequence('"ParticipationTypes"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Postable"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Postable") + 1,
        nextval(pg_get_serial_sequence('"Postable"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Users"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Users") + 1,
        nextval(pg_get_serial_sequence('"Users"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Comment"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Comment") + 1,
        nextval(pg_get_serial_sequence('"Comment"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Contacts"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Contacts") + 1,
        nextval(pg_get_serial_sequence('"Contacts"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Conversations"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Conversations") + 1,
        nextval(pg_get_serial_sequence('"Conversations"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Group"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Group") + 1,
        nextval(pg_get_serial_sequence('"Group"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Post"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Post") + 1,
        nextval(pg_get_serial_sequence('"Post"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Profile"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Profile") + 1,
        nextval(pg_get_serial_sequence('"Profile"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ConversationParticipants"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ConversationParticipants") + 1,
        nextval(pg_get_serial_sequence('"ConversationParticipants"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Events"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Events") + 1,
        nextval(pg_get_serial_sequence('"Events"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Galeries"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Galeries") + 1,
        nextval(pg_get_serial_sequence('"Galeries"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"GroupMembers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "GroupMembers") + 1,
        nextval(pg_get_serial_sequence('"GroupMembers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Messages"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Messages") + 1,
        nextval(pg_get_serial_sequence('"Messages"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Attachments"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Attachments") + 1,
        nextval(pg_get_serial_sequence('"Attachments"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"EventParticipants"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "EventParticipants") + 1,
        nextval(pg_get_serial_sequence('"EventParticipants"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Photo"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Photo") + 1,
        nextval(pg_get_serial_sequence('"Photo"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20221210142835_Initial', '7.0.0');

COMMIT;

